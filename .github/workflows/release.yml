name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

permissions:
  contents: write
  packages: write

env:
  IMAGE_OWNER: "deploykf"
  IMAGE_TITLE: "dashboard"
  IMAGE_DESCRIPTION: "Dashboard for deployKF"
  IMAGE_FOLDER: "dashboard"
  IMAGE_PLATFORMS: |
    linux/amd64
    linux/arm64

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install QEMU
        uses: docker/setup-qemu-action@v2

      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Image Tags/Labels
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_TITLE }}
            docker.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_TITLE }}
          flavor: |
            latest=true
          tags: |
            type=semver,priority=200,pattern={{major}}.{{minor}}
            type=semver,priority=100,pattern={{version}}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_TITLE }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}
            org.opencontainers.image.url=https://github.com/${{ github.repository }}/tree/main/${{ env.IMAGE_FOLDER }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}/tree/main/${{ env.IMAGE_FOLDER }}

      - name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ env.IMAGE_FOLDER }}
          push: true
          platforms: ${{ env.IMAGE_PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ env.IMAGE_OWNER }}/ci/${{ env.IMAGE_TITLE }}
          cache-to: type=registry,ref=ghcr.io/${{ env.IMAGE_OWNER }}/ci/${{ env.IMAGE_TITLE }},mode=max

      - name: Create GitHub Release
        uses: actions/github-script@v6
        with:
          script: |
            const { repo: { owner, repo }, ref: tag_ref } = context;
            const tag_name = tag_ref.replace('refs/tags/', '');
            const tag_version = tag_ref.replace('refs/tags/v', '');

            // Create a release
            const response = await github.rest.repos.createRelease({
              owner: owner,
              repo: repo,
              tag_name: tag_name,
              name: `deployKF Dashboard - ${tag_version}`,
              draft: false,
              prerelease: tag_name.includes('-'),
            });
